version: "3"
services:
  nextcloud:
    image: nextcloud:27.1.5
    container_name: nextcloud
    environment:
      - TZ=Europe/Berlin
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=${DB_NEXTCLOUD_USER}
      - MYSQL_PASSWORD=${DB_NEXTCLOUD_PASSWORD}
      - MYSQL_HOST=mariadb:3306
      - NEXTCLOUD_DATA_DIR=/data
      - NEXTCLOUD_TRUSTED_DOMAINS=nc.${WILDCARD_DOMAIN}
    volumes:
      - ${NEXTCLOUD_CONFIG}:/var/www/html/
      - ${NEXTCLOUD_DATA}:/data
    expose:
      - 80
    restart: always
    links:
      - fluentd
    logging:
      driver: "loki"
      options:
        loki-url: localhost:3100
        tag: nextcloud

  mariadb:
    expose:
      - 3306
    container_name: mariadb
    image: "mariadb:10.7.1"
    restart: 'always'
    links:
      - fluentd
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW --innodb-file-per-table=1 --skip-innodb-read-only-compressed
    volumes:
      - ${MARIADB_DATA}:/var/lib/mysql/
      - ./mariadbconf:/var/docker/mariadb/conf
    logging:
      driver: "loki"
      options:
        loki-url: localhost:3100
        tag: mariadb

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin:latest
    restart: always
    links:
      - mariadb
      - fluentd
    expose:
      - 80
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=mariadb
    logging:
      driver: "loki"
      options:
        loki-url: localhost:3100
        tag: phpmyadmin

  signal-cli-rest-api:
    container_name: signal-cli-rest-api
    restart: 'always'
    links:
      - fluentd
    image: bbernhard/signal-cli-rest-api:0.83
    environment:
      - MODE=normal #supported modes: json-rpc, native, normal
      - AUTO_RECEIVE_SCHEDULE=0 22 * * * #enable this parameter on demand (see description below)
    expose:
      - 8080 #map docker port 8080 to host port 8080.
    volumes:
      - "${SIGNAL_DATA}:/home/.local/share/signal-cli"
    logging:
      driver: "loki"
      options:
        loki-url: localhost:3100
        tag: signal-cli-rest-api

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.31.1
    restart: 'always'
    links:
      - fluentd
    expose:
      - 9090
    volumes:
      - ./prometheus:/etc/prometheus
      - ${PROMETHEUS_DATA}:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.retention.time=185d
    extra_hosts:
      - "host.docker.internal:host-gateway"
    logging:
      driver: "loki"
      options:
        loki-url: localhost:3100
        tag: prometheus
  
  grafana:
    container_name: grafana
    image: grafana/grafana:7.5.7
    restart: 'always'
    links:
      - fluentd
    expose:
      - 3000
    volumes:
      - ./grafana-datasources:/etc/grafana/provisioning/datasources
      - ${GRAFANA_DATA}:/var/lib/grafana
    logging:
      driver: "loki"
      options:
        loki-url: localhost:3100
        tag: grafana
  
  node-exporter:
  # https://grafana.com/docs/grafana-cloud/quickstart/docker-compose-linux/
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: always
    links:
      - fluentd
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    logging:
      driver: "loki"
      options:
        loki-url: localhost:3100
        tag: node-exporter

  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    restart: always
    links:
      - fluentd
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    expose:
      - 8080
    logging:
      driver: "loki"
      options:
        loki-url: localhost:3100
        tag: cadvisor    

  signal-webhook:
    image: signal-webhook
    container_name: signal-webhook
    restart: always
    links:
      - fluentd
    expose:
      - 8080
    environment:
      - SIGNAL_CLI_REST_API_BASE_URL=http://signal-cli-rest-api:8080
      - SOURCE_NUMBER=${SIGNAL_SOURCE_NUMBER}
      - TARGET_NUMBER=${SIGNAL_TARGET_NUMBER}
    logging:
      driver: "loki"
      options:
        loki-url: localhost:3100
        tag: signal-webhook

  nextcloud-exporter:
    image: xperimental/nextcloud-exporter
    container_name: nextcloud-exporter
    restart: always
    links:
      - fluentd
    expose:
      - 9205
    environment:
      - NEXTCLOUD_SERVER=http://nextcloud
      - NEXTCLOUD_USERNAME=${NEXTCLOUD_USERNAME}
      - NEXTCLOUD_PASSWORD=${NEXTCLOUD_PASSWORD}
      - NEXTCLOUD_TLS_SKIP_VERIFY=true
    logging:
      driver: "loki"
      options:
        loki-url: localhost:3100
        tag: nextcloud-exporter
  
  mysql-exporter:
    image: prom/mysqld-exporter
    container_name: mysql-exporter
    restart: always
    links:
      - fluentd
    expose:
      - 9104
    environment:
      - DATA_SOURCE_NAME=${DATA_SOURCE_NAME}
    logging:
      driver: "loki"
      options:
        loki-url: localhost:3100
        tag: mysql-exporter

  fritz-exporter:
    # https://github.com/pdreker/fritz_exporter/issues/62
    image: pdreker/fritz_exporter:latest
    container_name: fritz-exporter
    restart: always
    links:
      - fluentd
    environment:
      # - FRITZ_HOSTNAME='fritz.box'
      - FRITZ_USERNAME=${FRITZBOX_USERNAME}
      - FRITZ_PASSWORD=${FRITZBOX_PASSWORD}
    expose:
      - 9787
    logging:
      driver: "loki"
      options:
        loki-url: localhost:3100
        tag: fritz-exporter
  
  nginx:
    ports:
      - "443:443"
    image: nginxinc/nginx-unprivileged:1.23.4
    container_name: nginx
    restart: always
    links:
      - fluentd
    user: "1000:1000"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx_data/cache:/var/cache/nginx
      - ./nginx_data/tmp:/tmp
      - ./nginx_data/run:/var/run
      - ./letsencrypt/archive/:/var/letsencrypt/archive/
      - ./letsencrypt/live/${WILDCARD_DOMAIN}:/var/letsencrypt/live/domain
    logging:
      driver: "loki"
      options:
        loki-url: localhost:3100
        tag: nginx

  
  loki:
    image: grafana/loki:2.9.2
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml